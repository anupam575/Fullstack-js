createElement(tagName)
🧠 Kya Karta Hai?
Ye method naya HTML element create karta hai jo tum specify karte ho us tagName ke saath. Lekin, isse tumhe empty element milta hai. Matlab, element ban gaya par andar koi content ya text nahi hota.

🔧 Syntax:
javascript
Copy
Edit
let newElement = document.createElement("tagName");
tagName — Yahan tum tag ka naam likhte ho. Jaise: "div", "ul", "p", "li", "span", etc.

🔸 Example:
javascript
Copy
Edit
let newDiv = document.createElement("div");  // Yeh ek khaali <div></div> banayega
Note: Ye line bas ek khaali <div> bana rahi hai. Is <div> mein koi text, style, ya children elements nahi hain. Tumhe isme content ya aur elements add karne honge.

🔧 Next Step: Is <div> ko document mein jaha chaaho append (add) kar sakte ho:
javascript
Copy
Edit
document.body.appendChild(newDiv);  // Yeh naya <div> ko body mein add karega
🔹 createTextNode(text)
🧠 Kya Karta Hai?
Ye method plain text node banata hai. Matlab, ye text ko as it is HTML page mein add karne ke liye ek separate node create karta hai.

🔧 Syntax:
javascript
Copy
Edit
let textNode = document.createTextNode("Your Text Here");
text — Yahan tum jo bhi text denge, wo text node ke andar aayega.

🔸 Example:
javascript
Copy
Edit
let textNode = document.createTextNode("Hello World!");  // Yeh ek text node banayega jo "Hello World!" ko represent karega
Note: Ye sirf text ko store karta hai, koi HTML tags nahi. Agar tum <div>Hello World!</div> chahte ho, toh tumhe createElement("div") aur createTextNode("Hello World!") dono ka use karna hoga.

🔗 Donon Ka Saath Mein Kaise Use Karte Hai?
Agar tum dono ko combine karna chahte ho, toh naye element ko text dena bahut easy ho jata hai.

Example:

javascript
Copy
Edit
// Step 1: Create a new <li> element
let newLi = document.createElement("li");

// Step 2: Create a text node with the text "Task 1"
let text = document.createTextNode("Task 1");

// Step 3: Append the text node to the <li> element
newLi.appendChild(text);

// Step 4: Append the <li> to the <ul> element
document.getElementById("taskList").appendChild(newLi);
✅ Explanation Step-by-Step:
createElement("li") — Yeh ek khaali <li> element bana raha hai.

createTextNode("Task 1") — Yeh ek text node bana raha hai jo "Task 1" likha hua hai.

appendChild(text) — Yeh text node ko <li> ke andar daal raha hai.

appendChild(newLi) — Yeh naye <li> ko taskList ke <ul> element mein daal raha hai.

📊 Comparison Table:

Method	Kya Karta Hai	Example
createElement(tagName)	Naya HTML element create karta hai	<li>, <div>, <p> etc.
createTextNode(text)	Plain text node create karta hai	"Task 1", "Hello"
🧠 Summary:
createElement(tagName): Naye HTML element ka structure banaata hai (lekin usme koi content nahi hota).

createTextNode(text): Koi bhi plain text ko text node me convert karta hai.

Agar dono ko ek saath use karte ho, toh tum HTML page pe naye elements aur text dynamically add kar sakte ho!

Agar tu chahte ho toh main ek example bana ke dikha sakta hoon jisme createElement() aur createTextNode() ka combination ho. 👍